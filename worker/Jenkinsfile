pipeline {
	agent none

	stages {
		stage('Build') {
			agent {
				docker {
					image 'maven:3.6.1-jdk-8-slim'
				}
			}
			when {
				changeset '**/worker/**'
			}
			steps {
				echo 'Compiling worker app'
				dir('worker'){
					sh 'mvn compile'
				}
			}
		}

		stage("test"){
			agent {
				docker {
					image 'maven:3.6.1-jdk-8-slim'
				}
			}
			when {
				changeset '**/worker/**'
			}
        	steps{
            	echo 'Running Unit Tets on worker app'
				dir('worker'){
					sh 'mvn clean test'
				}
          	}
      	}

		stage("package"){
			agent {
				docker {
					image 'maven:3.6.1-jdk-8-slim'
				}
			}
			when {
				changeset '**/worker/**'
			}
        	steps{
				echo 'Creating archive artifacts'
				dir('worker'){
					sh 'mvn package -DskipTests'
					archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
				}
			}
		}

		stage("docker image build"){
			agent any
			when {
				changeset '**/worker/**'
			}
        	steps{
            	echo 'Packaging worker app with Docker Image Build'
				script {
					docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin'){
						def worker_image = docker.build("jlegardevops/worker:v${env.BUILD_ID}", "./worker")
						worker_image.push()
						worker_image.push('latest')
					}
				}
          	}
      	}
	}

	post {
		always {
			echo 'Building multibranch pipeline for worker is completed..'
		}
	}
}
